#+title: Simple Clojurescript Web App

This is just a simple ClojureScript app, built for my own amusement and experimentation. It's a showcase with a single page that allows you to search for stories posted on Hacker News, and obtain a summary (using ChatGPT API) about the content as well as the discussion on HN.

[[https://imgur.com/a/gY3wsYd]]


* To run locally
** Prerequisites
- Clojure CLI
- Node.js ver >= 18
- OpenAI personal token

#+begin_src sh :results verbatim
npm install
#+end_src

#+begin_src
clojure -A:backend:frontend:dev
#+end_src

Once in the REPL, type:

#+begin_src clojure
(reset) ;; or (go)
#+end_src
That should force Integrant to start the system: run the jetty server, start postcss and shadowcljs watchers.

The server would be running on port 3003

#+begin_src
open http://localhost:3003
#+end_src

** For ChatGPT feature to work
- Obtain OpenAI token
- add ~./resources/creds.gpg~ (it should be encrypted with your default GPG key) in the following format:

#+begin_src clojure
{:open-ai-key "YOUR-OPEN-AI-TOKEN"}
#+end_src

To test if it was correctly encrypted, you can run:
#+begin_src sh :results verbatim
$(which gpg2) -q --for-your-eyes-only --no-tty -d resources/creds.gpg
#+end_src


** For Emacs
Simply cider-jack-in normally.
Optionally can ~cider-jack-in-clj&cljs~ for two REPLS.
In Clojure REPL, run ~(reset)~

There's ~.dir-locals.el~ file that properly sets the aliases and other variables. If CIDER prompts to choose either clojure-cli or shadow-cljs, that would mean that the dir local vars aren't properly set. The dependencies in that case won't properly load since we need to use aliases.
The only guaranteed way in that case is to try to restart Emacs and open deps.edn again. Emacs typically would prompt asking if it is safe to set dir local vars for this project.
In the case when you want your own project local customizations, you can create [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Directory-Variables.html][.dir-locals-2.el]]. It would be git-ignored.
For example, you may want to automatically start the app by initializing the Integrant system. In that case you can add .dir-locals-2.el file with the following content:

#+begin_src emacs-lisp
((nil . ((cider-repl-init-code . ("(require '[integrant.repl :refer [go]]) (go)")))))
#+end_src
